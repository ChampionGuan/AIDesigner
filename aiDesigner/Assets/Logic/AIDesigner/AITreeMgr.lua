---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chaoguan.
--- DateTime: 2021/3/5 10:36
---

---@type AITree
local AITree = require("AIDesigner.Base.AITree")
---@type AISystemContext
local AIContext = require("AIDesigner.AIContext")

local AITreeMgr = {}
---@type table<number,AITree>
AITreeMgr._trees = {}
---配置前缀
AITreeMgr._configPrefix = "Cfgs."

---@param treeName string
---@param aiContext AISystemContext 上下文
---@return AITree
function AITreeMgr.CreateTree(treeName, aiContext)
    if AIUtil.StringIsNullOrEmpty(treeName) then
        return nil
    end

    ---@type boolean
    ---@type TreeConfig
    local ok, config = pcall(require, AITreeMgr._configPrefix .. treeName)
    if not ok then
        print(string.format("[AITreeMgr][AITreeConfig][The configuration named ‘%s’ cannot be found.]", treeName))
        return nil
    end
    config.name = treeName
    config.pathPrefix = AITreeMgr._configPrefix

    if not aiContext then
        aiContext = AIContext.new()
    end

    local tree = AITree.new(config, aiContext)
    AITreeMgr._trees[tree:GetInsID()] = tree
    tree:Start()
    return tree
end

---@param tree System.AITree
function AITreeMgr.RemoveTree(tree)
    if not tree then
        return false
    end
    AITreeMgr._trees[tree:GetInsID()] = nil
    tree:Destroy()
end

---@param insID number
function AITreeMgr.GetTree(insID)
    if not insID or not AITreeMgr._trees[insID] then
        return nil
    end
    return AITreeMgr._trees[insID]
end

---@param insID number
---@param key string
---@param value any
function AITreeMgr.SetVariable(insID, key, value)
    if not AITreeMgr._trees[insID] then
        return
    end
    AITreeMgr._trees[insID]:SetVariable(key, value)
end

---@param insID number
---@param key string
function AITreeMgr.GetVariable(insID, key)
    if not AITreeMgr._trees[insID] then
        return nil
    end
    return AITreeMgr._trees[insID]:GetVariable(key)
end

---@param insID number
---@param key string
---@param type AIVarType
---@param value any
function AITreeMgr.AddVariable(insID, key, type, value)
    if not AITreeMgr._trees[insID] then
        return
    end
    return AITreeMgr._trees[insID]:AddVariable(key, type, value)
end

return AITreeMgr